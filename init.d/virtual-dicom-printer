#!/bin/sh
#
# Virtual DICOM printer control script.
#
# chkconfig: - 80 20
# description: Virtual DICOM printer
# pidfile: /var/run/virtual-dicom-printer.pid

if [ -r /lib/lsb/init-functions ]; then
  . /lib/lsb/init-functions
fi

prog=virtual-dicom-printer

virtual_dicom_printer_starter="/usr/bin/virtual-dicom-printer"

[ -f /etc/sysconfig/virtual-dicom-printer ] && . /etc/sysconfig/virtual-dicom-printer

if [ -z "$VIRTUAL_DICOM_PRINTER_LOG" ]; then
    VIRTUAL_DICOM_PRINTER_LOG=/var/log/virtual-dicom-printer.log
fi

if [ -z "$VIRTUAL_DICOM_PRINTER_PIDFILE" ]; then
  VIRTUAL_DICOM_PRINTER_PIDFILE="/var/run/virtual-dicom-printer.pid"
fi

if [ -z "$VIRTUAL_DICOM_PRINTER_SHUTDOWN_WAIT" ]; then
  VIRTUAL_DICOM_PRINTER_SHUTDOWN_WAIT=30
fi

start() {
  echo -n "Starting $prog: "

  if [ -f $VIRTUAL_DICOM_PRINTER_PIDFILE ]; then
    read ppid < $VIRTUAL_DICOM_PRINTER_PIDFILE
    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
      log_success_msg "already running (pid $ppid)"
      return 0
    else
      rm -f $VIRTUAL_DICOM_PRINTER_PIDFILE
    fi
  fi

  if [ -n "$VIRTUAL_DICOM_PRINTER_USER" ]; then
    su - $VIRTUAL_DICOM_PRINTER_USER -c "$VIRTUAL_DICOM_PRINTER_OPTS $virtual_dicom_printer_starter > $VIRTUAL_DICOM_PRINTER_LOG 2>&1" &
    ret=$?
    VIRTUAL_DICOM_PRINTER_PID=$!
  else
    $virtual_dicom_printer_starter $VIRTUAL_DICOM_PRINTER_OPTS > $VIRTUAL_DICOM_PRINTER_LOG 2>&1 &
    ret=$?
    VIRTUAL_DICOM_PRINTER_PID=$!
  fi

  if [ $ret -ne "0" ]; then
    log_failure_msg "Failed to start"
    return 1
  fi

  echo $VIRTUAL_DICOM_PRINTER_PID > $VIRTUAL_DICOM_PRINTER_PIDFILE

  log_success_msg "started (pid $VIRTUAL_DICOM_PRINTER_PID)"
  return 0
}

stop() {
  echo -n "Stopping $prog: "

  count=0

  if [ -f $VIRTUAL_DICOM_PRINTER_PIDFILE ]; then
    read ppid < $VIRTUAL_DICOM_PRINTER_PIDFILE
    kwait=$VIRTUAL_DICOM_PRINTER_SHUTDOWN_WAIT

    kill -15 $ppid

    until [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]; do
      sleep 1
      let count=$count+1
    done

    if [ $count -gt $kwait ]; then
      echo "process failed to stop gracefully, kill it"
      kill -9 $ppid
    fi
  else
    log_success_msg "$prog is not running"
    return 7
  fi

  rm -f $VIRTUAL_DICOM_PRINTER_PIDFILE

  log_success_msg "stopped"
  return 0
}

status() {
  if [ -f "$VIRTUAL_DICOM_PRINTER_PIDFILE" ]; then
    read ppid < "$VIRTUAL_DICOM_PRINTER_PIDFILE"
    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
      echo "$prog is running (pid $ppid)"
      return 0
    else
      echo "$prog is dead but pid file exists"
      return 1
    fi
  fi

  echo "$prog is not running"
  return 3
}

case "$1" in
  start)
    start
    exit $?
    ;;

  stop)
    stop
    exit $?
    ;;

  restart)
    stop
    if [ $? -ne "0" ]; then
      exit $?
    fi

    start
    ;;

  status)
    status
    ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 2
    ;;
esac
